C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\shudian2\5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\m
                    -ain.lst) TABS(6) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          //_nop_()会用到下面头文件，代表跳过一个机器周期，12Mhz为1us，11.0592Mhz约为1.08us
   4          #include <intrins.h>
   5          
   6          
   7          unsigned char zhengZhuan[8]={0xf2,0xf6,0xf4,0xfc,0xf8,0xf9,0xf1,0xf3}; 
   8          
   9          unsigned char fanZhuan[8]={0xf1,0xf9,0xf8,0xfc,0xf4,0xf6,0xf2,0xf3}; 
  10          
  11          //设置A B C的吃药次数和用量
  12          //数组分别存储 A吃药次数 A用量 B吃药次数 B用量  C吃药次数 C用量  以及用药间隔
  13          unsigned char User[6] = 0;
  14          //User数组的下标
  15          //static表示静态，不会随着函数结束而使得该变量清零
  16          static unsigned char num = 0;
  17          
  18          
  19          //从0-5 分别为 A的小时分钟 B的小时分钟 C的小时分钟
  20          char ABC_setTime[7] = 0;
  21          //ABC_setTime数组的下标
  22          unsigned char set_timeI = 0;
  23          
  24          //定义时钟变量
  25          char hour = 0;
  26          char minute = 0;
  27          char second = 0;
  28          
  29          //定时器0计数
  30          static unsigned int timer0_count = 0;
  31          
  32          
  33          //定义lcd1602寄存器
  34          #define Lcdout P0
  35          
  36          //用来判断温度有没有大于35
  37          unsigned char tempFlag = 0;
  38          //LCD1602定义引脚
  39          sbit RS = P2^6;
  40          sbit RW = P2^5;
  41          sbit EN = P2^7;
  42          
  43          //用药的灯
  44          sbit A_LED = P2^0;
  45          sbit B_LED = P2^1;
  46          sbit C_LED = P2^2;
  47          
  48          //打开 关闭药柜
  49          sbit Motor_open = P1^6;
  50          sbit Motor_off = P1^7;
  51          
  52          //DS18B20
  53          sbit DSPORT=P1^5;
  54          
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 2   

  55          
  56          
  57          //********************************************************************************************************
             -*************************************
  58          
  59           /**
  60            *@brief           延时函数子函数
  61            *@param   
  62            *@return
  63           */
  64          void Delayms(unsigned char mm)      //需要延时多少ms就输入多少
  65          {
  66   1            
  67   1            while(mm--)
  68   1            {
  69   2                  unsigned char i, j;
  70   2      
  71   2                  i = 2;
  72   2                  j = 239;
  73   2                  do
  74   2                  {
  75   3                        while (--j);
  76   3                  } while (--i);          
  77   2            }           
  78   1      
  79   1      }
  80          
  81          void Delay1ms(unsigned int n)
  82          {
  83   1            unsigned int i,j;
  84   1            for(i=0;i<n;i++)
  85   1                  for(j=0;j<123;j++);
  86   1      }
  87          
  88          void delay5(unsigned char n)
  89          {
  90   1            do{_nop_();
  91   2                  _nop_();
  92   2                  _nop_();
  93   2                  n--;
  94   2              }
  95   1              while(n);
  96   1      }
  97          //********************************************************************************************************
             -*************************************
  98           /**
  99            *@brief           DS18B20
 100            *@param   
 101            *@return
 102           */
 103          unsigned char Ds18b20Init()
 104          {
 105   1            unsigned char i;
 106   1            DSPORT=0;
 107   1            delay5(120);
 108   1            DSPORT=1;
 109   1            i=0;
 110   1            while(DSPORT)
 111   1            {
 112   2                  Delay1ms(1);
 113   2                  i++;
 114   2                  if(i>5)
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 3   

 115   2                  return 0;
 116   2            }
 117   1            return 1;
 118   1      }
 119          unsigned char Ds18b20WriteByte(unsigned char dat)
 120          {
 121   1            unsigned int i,j;
 122   1            for (j=0;j<8;j++)
 123   1            {
 124   2                  DSPORT=0;
 125   2                  i++;
 126   2                  DSPORT=dat&0x01;
 127   2                  delay5(12);
 128   2                  DSPORT=1;
 129   2                  dat>>=1;
 130   2            }
 131   1            return dat;
 132   1      }
 133          unsigned char Ds18b20ReadByte()
 134          {
 135   1            unsigned char byte,bi,i,j;
 136   1            for(j=8;j>0;j--)
 137   1            {
 138   2                  DSPORT=0;
 139   2                  i++;
 140   2                  DSPORT=1;
 141   2                  i++;
 142   2                  i++;
 143   2                  bi=DSPORT;
 144   2                  byte=(byte>>1)|(bi<<7);
 145   2                  delay5(9);
 146   2            }
 147   1            return byte;
 148   1      }
 149          void Ds18b20ReadTempCom()
 150          {
 151   1            Ds18b20Init();
 152   1            Delay1ms(1);
 153   1            Ds18b20WriteByte(0xcc);
 154   1            Ds18b20WriteByte(0x44);
 155   1            Ds18b20Init();
 156   1            Delay1ms(1);
 157   1            Ds18b20WriteByte(0xcc);
 158   1            Ds18b20WriteByte(0xbe);
 159   1      }
 160          
 161          int Ds18b20ReadTemp()
 162          {
 163   1            int temp=0;
 164   1            unsigned char tmh,tml;
 165   1            Ds18b20ReadTempCom();
 166   1            tml= Ds18b20ReadByte();
 167   1            tmh= Ds18b20ReadByte();
 168   1            temp=tmh;
 169   1            temp<<=8;
 170   1            temp|=tml;
 171   1            return temp;
 172   1      }
 173          
 174          //********************************************************************************************************
             -*************************************
 175           /**
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 4   

 176            *@brief           以下为LCD1602子函数
 177            *@param   
 178            *@return
 179           */                                              
 180          
 181          
 182          //发送命令  RS = 0
 183          void Write_cmd(unsigned char cmd)
 184          {
 185   1      
 186   1            RS = 0;
 187   1            RW = 0;
 188   1            EN = 0;
 189   1      
 190   1            //单片机把要发送的数据放到数据总线里
 191   1            Lcdout = cmd;
 192   1            
 193   1            EN = 1;
 194   1            
 195   1            _nop_();
 196   1      
 197   1            EN = 0;
 198   1            
 199   1            Delayms(1);
 200   1      
 201   1            
 202   1      }
 203          void Write_data(unsigned char cmd)
 204          {
 205   1      
 206   1            RS = 1;
 207   1            RW = 0;
 208   1            EN = 0;
 209   1      
 210   1            //单片机把要发送的数据放到数据总线里
 211   1            Lcdout = cmd;
 212   1            
 213   1            EN = 1;
 214   1            
 215   1            _nop_();
 216   1      
 217   1            EN = 0;
 218   1            
 219   1            Delayms(1);
 220   1            
 221   1      
 222   1      }
 223          void Lcd_initial()
 224          {
 225   1      
 226   1            Write_cmd(0x01);
 227   1            Write_cmd(0x06);
 228   1            
 229   1            Write_cmd(0x0c);
 230   1            Write_cmd(0x38);
 231   1            
 232   1      
 233   1            
 234   1            Delayms(1);
 235   1            
 236   1            
 237   1      }
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 5   

 238          
 239          void Lcd_write_string(char cmd, char* addr)
 240          {
 241   1            while(*addr != '\0')
 242   1            {
 243   2                  Write_cmd(cmd++);
 244   2                  Write_data(*addr);
 245   2                  addr++;
 246   2            }
 247   1      }
 248          
 249          
 250          
 251          //在第几行第几列显示数字
 252          //形参列表（行，列，数字）
 253          
 254          void Lcd_write_number(char line, char row ,unsigned int number)
 255          {
 256   1            if(1 == line)
 257   1            {
 258   2                  Write_cmd(0x80+row-1);
 259   2                  Write_data((number/10)+0x30);
 260   2                  Write_data((number%10)+0x30);
 261   2            }
 262   1            else if(2 == line)
 263   1            {
 264   2                  Write_cmd(0xc0+row-1);
 265   2                  Write_data((number/10)+0x30);
 266   2                  Write_data((number%10)+0x30);
 267   2            }
 268   1      }
 269          
 270          
 271          //********************************************************************************************************
             -*************************************
 272          /**
 273            *@brief         矩阵键盘函数
 274            *@param   
 275            *@return
 276           */
 277          //检测按下
 278          unsigned char Matrix_key()
 279          {
 280   1            unsigned char n = 0;
 281   1            unsigned char m = 0;
 282   1            P3=0xf0;
 283   1            
 284   1            //检测到有按键按下，高四位会有一个变成0
 285   1            if((P3&0xf0)!=0xf0);
 286   1            {
 287   2                  Delayms(10);
 288   2                        
 289   2                  if((P3&0xf0)!=0xf0);
 290   2                  {
 291   3                        //取高四位
 292   3                        n=P3&0xf0;
 293   3                        
 294   3                        P3=0x0f;
 295   3      
 296   3                        //取低四位
 297   3                        m=P3&0x0f;
 298   3                        
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 6   

 299   3                        return(n+m);
 300   3                  }
 301   2            }
 302   1      }     
 303          //通过矩阵键盘按下返回值
 304          unsigned char Matrix_keyReturn()
 305          {
 306   1            unsigned char temp;
 307   1            
 308   1            switch(Matrix_key())
 309   1            {
 310   2                  case 0xee: temp = 1; break;
 311   2                  case 0xde: temp = 2; break;
 312   2                  case 0xbe: temp = 3; break;
 313   2                  case 0x7e: temp = 4; break;
 314   2                  case 0xed: temp = 5; break;
 315   2                  case 0xdd: temp = 6; break;
 316   2                  case 0xbd: temp = 7; break;
 317   2                  case 0x7d: temp = 8; break;
 318   2                  case 0xeb: temp = 9; break;
 319   2                  case 0xdb: temp = 0; break;
 320   2      //          case 0xbb: temp =11; break;
 321   2      //          case 0x7b: temp =12; break;
 322   2      //          case 0xe7: temp =12; break;
 323   2      //          case 0xd7: temp =12; break;
 324   2      //          case 0xb7: temp =12; break;
 325   2      //          case 0x77: temp =12; break;
 326   2                  
 327   2                  
 328   2            }
 329   1            
 330   1            return temp;
 331   1      }
 332          //限制ABC用量
 333          void ABC_Limit()
 334          {
 335   1            User[0] %= 4;
 336   1            User[2] %= 4;
 337   1            User[4] %= 4;
 338   1            User[1] %= 10;
 339   1            User[3] %= 10;
 340   1            User[5] %= 10;
 341   1      }
 342          //设置ABC的量
 343          void A_B_C_Set()
 344          {
 345   1            
 346   1            if(0xe7 == Matrix_key())
 347   1            {
 348   2                  User[num]++;
 349   2                  while(0xe7 == Matrix_key());
 350   2            }else if(0xd7 == Matrix_key())
 351   1            {
 352   2                  User[num]--;
 353   2                  while(0xd7 == Matrix_key());
 354   2            }else if(0xb7 == Matrix_key())
 355   1            {
 356   2                  num++;
 357   2                  if(num > 5) {num = 0;}
 358   2                  while(0xb7 == Matrix_key());
 359   2            }
 360   1            ABC_Limit();
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 7   

 361   1            Write_cmd(0xc1);
 362   1            Write_data(':');
 363   1            Write_data(User[0]+0x30);
 364   1            Write_data(User[1]+0x30);
 365   1            Write_cmd(0xc5);
 366   1            Write_data(':');
 367   1            Write_data(User[2]+0x30);
 368   1            Write_data(User[3]+0x30);
 369   1            Write_cmd(0xc9);
 370   1            Write_data(':');
 371   1            Write_data(User[4]+0x30);
 372   1            Write_data(User[5]+0x30);
 373   1            Write_cmd(0xcd);
 374   1            Write_data((num+1)+0x30);
 375   1            
 376   1      
 377   1            
 378   1      }
 379          
 380          //设置ABC用药时间的小时分钟限制
 381          void ABCTime_Judge()
 382          {
 383   1            unsigned char i = 0;
 384   1            for(i = 0; i <=5; i+=2)
 385   1            {
 386   2                  if(ABC_setTime[i] >= 24)
 387   2                  {
 388   3                        ABC_setTime[i] = 0;
 389   3                  }else if(ABC_setTime[i] < 0)
 390   2                  {
 391   3                        ABC_setTime[i] = 23;
 392   3                  }
 393   2            }
 394   1            
 395   1            for(i = 1; i <= 5; i+=2)
 396   1            {
 397   2                  if(ABC_setTime[i] >= 60)
 398   2                  {
 399   3                        ABC_setTime[i] = 0;
 400   3                  }else if(ABC_setTime[i] < 0)
 401   2                  {
 402   3                        ABC_setTime[i] = 59;
 403   3                  }
 404   2            }
 405   1            
 406   1            
 407   1      }
 408          
 409          //设置ABC用药时间
 410          void ABC_SetEatTime()
 411          {
 412   1            while(Matrix_key() != 0x77)
 413   1            {
 414   2                  //检查时间是否合法
 415   2                  ABCTime_Judge();
 416   2                  
 417   2                  //如果用药间隔小于4h
 418   2                  if(ABC_setTime[6] < 4)
 419   2                  {
 420   3                        Lcd_write_string(0x8d,"!");
 421   3                  }else 
 422   2                  {
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 8   

 423   3                        Lcd_write_string(0x8d," ");
 424   3            
 425   3                  }
 426   2                  //服药间隔小于24
 427   2                  ABC_setTime[6] %= 25;
 428   2                  if(ABC_setTime[6] < 0) {ABC_setTime[6] = 23;}
 429   2                  
 430   2                  //设置ABC用药时间
 431   2                  Lcd_write_string(0x80,"Set:");
 432   2                  Lcd_write_string(0xC0,"A");
 433   2                  Lcd_write_number(2,2,ABC_setTime[0]);
 434   2                  Lcd_write_string(0xC3,":");
 435   2                  Lcd_write_number(2,5,ABC_setTime[1]);
 436   2                        
 437   2                  Lcd_write_string(0x87,"B");
 438   2                  Lcd_write_number(1,9,ABC_setTime[2]);
 439   2                  Lcd_write_string(0x8a,":");
 440   2                  Lcd_write_number(1,12,ABC_setTime[3]);
 441   2                        
 442   2                  Lcd_write_string(0xc7,"C");
 443   2                  Lcd_write_number(2,9,ABC_setTime[4]);
 444   2                  Lcd_write_string(0xca,":");
 445   2                  Lcd_write_number(2,12,ABC_setTime[5]);
 446   2                  
 447   2                  //设置间隔
 448   2                  Lcd_write_number(1,15,ABC_setTime[6]);    
 449   2                  if(0xe7 == Matrix_key())
 450   2                  {
 451   3                        ABC_setTime[set_timeI]++;
 452   3                        while(0xe7 == Matrix_key());
 453   3                  }else if(0xd7 == Matrix_key())
 454   2                  {
 455   3                        ABC_setTime[set_timeI]--;
 456   3                        while(0xd7 == Matrix_key());
 457   3                  }else if(0xb7 == Matrix_key())
 458   2                  {
 459   3                        set_timeI++;
 460   3                        if(set_timeI > 6) {set_timeI = 0;}
 461   3                        while(0xb7 == Matrix_key());
 462   3                  }     
 463   2                  
 464   2                  //显示下标
 465   2                  Lcd_write_number(1,5,(set_timeI+1));
 466   2            }
 467   1            //清屏
 468   1            Write_cmd(0x01);
 469   1            //延时防止把后面需要的也清屏了
 470   1            Delayms(10);
 471   1            
 472   1      }
 473          
 474          
 475          //到时间后ABC的灯亮并且提醒
 476          unsigned char ABC_Warn()
 477          {
 478   1            //吃A药
 479   1            if(hour == ABC_setTime[0] && minute == ABC_setTime[1])
 480   1            {
 481   2                  //亮灯
 482   2                  A_LED = 0; B_LED = 1; C_LED = 1;
 483   2      
 484   2                  //LCD显示
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 9   

 485   2                  Lcd_write_string(0x8a,"A");
 486   2                  return 1;
 487   2            }else if(hour == ABC_setTime[2] && minute == ABC_setTime[3])
 488   1            {
 489   2                  //吃B药
 490   2                  //亮灯
 491   2                  A_LED = 1; B_LED = 0; C_LED = 1;
 492   2                  //LCD显示
 493   2                  Lcd_write_string(0x8a,"B");
 494   2                  return 1;
 495   2                  
 496   2            }else if(hour == ABC_setTime[4] && minute == ABC_setTime[5])
 497   1            {
 498   2                  //吃C药
 499   2                  //亮灯
 500   2                  A_LED = 1; B_LED = 1; C_LED = 0;
 501   2                  //LCD显示
 502   2                  Lcd_write_string(0x8a,"C");
 503   2                  return 1;
 504   2                  
 505   2            }
 506   1            return 0;
 507   1      }
 508          //********************************************************************************************************
             -*************************************
 509          
 510          /**
 511            *@brief         定时器0初始化
 512            *@param   
 513            *@return
 514           */
 515          void Timer0_Init()
 516          {
 517   1            //打开定时器0的1模式
 518   1            TMOD &= 0xf0;
 519   1            TMOD |= 0x01;
 520   1            
 521   1            //设置TCON
 522   1            TF0 = 0;
 523   1            TR0 = 1;
 524   1            
 525   1            //设置计时时间
 526   1            //这里设置10000 == 10000us == 10ms == 0.01s
 527   1            //TH0和TL0为八位，分别把一个十六位的高八位低八位赋值
 528   1            TH0 = (65535 - 10000)/256;
 529   1            TL0 = (65535 - 10000)%256;
 530   1            
 531   1            //打开中断
 532   1            ET0 = 1;
 533   1            //总中断
 534   1            EA = 1;
 535   1      }
 536          
 537          //时钟判断函数
 538          void Time_Judge()
 539          {
 540   1            if(second >= 60)
 541   1            {
 542   2                  minute++;
 543   2                  second = 0;
 544   2            }else if(minute >= 60)
 545   1            {
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 10  

 546   2                  hour++;
 547   2                  minute = 0;
 548   2            }else if(hour >= 24)
 549   1            {
 550   2                  hour = 0;
 551   2            }else if(minute < 0)
 552   1            {
 553   2                  minute = 59;
 554   2                  hour--;
 555   2            }else if(hour < 0)
 556   1            {
 557   2                  hour = 23;
 558   2            }
 559   1      }
 560          
 561          //时钟显示函数
 562          void Time_Show()
 563          {
 564   1            Time_Judge();
 565   1            Lcd_write_string(0X82,":");
 566   1            Lcd_write_number(1,1,hour);
 567   1            Lcd_write_number(1,4,minute);
 568   1      
 569   1      }
 570          
 571          //操作时钟
 572          void Time_Set()
 573          {
 574   1            //分加
 575   1            if(0xbb == Matrix_key())
 576   1            {
 577   2                  Delayms(10);
 578   2                  if(0xbb == Matrix_key())
 579   2                  {
 580   3                        minute += 5;
 581   3                        while(0xbb == Matrix_key());
 582   3                  }
 583   2            }
 584   1            //分减
 585   1            if(0x7b == Matrix_key())
 586   1            {
 587   2                  Delayms(10);
 588   2                  if(0x7b == Matrix_key())
 589   2                  {
 590   3                        minute --;
 591   3                        while(0x7b == Matrix_key());
 592   3                  }
 593   2            }
 594   1      }
 595          
 596          //********************************************************************************************************
             -*************************************
 597          /**
 598            *@brief          电机键盘函数
 599            *@param   
 600            *@return
 601           */
 602          void Motor()
 603          {
 604   1            unsigned char i = 0;
 605   1            unsigned char j = 0;
 606   1            if(0 == Motor_open && 0 == tempFlag && ABC_Warn())
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 11  

 607   1            {
 608   2                  Delayms(10);
 609   2                  if(0 == Motor_open)
 610   2                  {
 611   3                        for(i = 0; i < 8; i++)
 612   3                        {
 613   4                              P1 = zhengZhuan[i];
 614   4                              Delayms(100);
 615   4                                    
 616   4                        }
 617   3                  }
 618   2                  
 619   2      
 620   2            }else if(0 == Motor_off && 0 == tempFlag && ABC_Warn())
 621   1            {
 622   2                  Delayms(10);
 623   2                  if(0 == Motor_off)
 624   2                  {
 625   3                        for(i = 0; i < 8; i++)
 626   3                        {
 627   4                              P1 = fanZhuan[i];
 628   4                              Delayms(100);
 629   4                                    
 630   4                        }
 631   3                  }           
 632   2            }
 633   1      
 634   1      }
 635          
 636          
 637          
 638          //********************************************************************************************************
             -*************************************
 639          void main()
 640          {
 641   1      
 642   1            //接受温度
 643   1            unsigned int tmp;
 644   1            //LCD1602初始化
 645   1            Lcd_initial();
 646   1            //定时器0初始化
 647   1            Timer0_Init();
 648   1      
 649   1            //显示学号后两位
 650   1            Lcd_write_string(0xce,"47");
 651   1            
 652   1            
 653   1            //设置ABC的吃药时间，设置完后，吃药的时间会存储在数组中
 654   1            ABC_SetEatTime();
 655   1            
 656   1            
 657   1            //设置A用量
 658   1            Lcd_write_string(0xc0,"A");
 659   1            Lcd_write_string(0xc4,"B");
 660   1            Lcd_write_string(0xc8,"C");
 661   1            
 662   1            //显示学号后两位
 663   1            Lcd_write_string(0xce,"47");
 664   1      
 665   1            
 666   1            
 667   1            
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 12  

 668   1            
 669   1            
 670   1            
 671   1            while(1)
 672   1            {
 673   2                  //接受温度
 674   2                  //为什么/16 是因为ds18b20由十六位组成，然后低四位储存的是小数，导致实际温度比返回值小2的四次方，所以要除
             -16
 675   2                  tmp = (Ds18b20ReadTemp()/16);
 676   2                  
 677   2                  //判断体温有没有大于35
 678   2                  if(tmp > 35) {tempFlag = 1;}
 679   2                  else {tempFlag = 0;}
 680   2                  if(tempFlag) {Lcd_write_string(0xcc,"!");}
 681   2                  else {Lcd_write_string(0xcc," ");}
 682   2                  
 683   2                  //步进电机
 684   2                  Motor();
 685   2                  
 686   2                  //LCD显示温度
 687   2                  Lcd_write_string(0x86,"T");
 688   2                  Lcd_write_number(1,8,tmp);
 689   2      
 690   2                  //时钟显示 设置 ABC设置
 691   2                  Time_Show();
 692   2                  Time_Set();
 693   2                  A_B_C_Set();
 694   2                  //到达设定的吃药时间
 695   2                  ABC_Warn();
 696   2      
 697   2            }
 698   1            
 699   1            
 700   1            
 701   1            
 702   1      }
 703          
 704          
 705          //定义定时器0中断
 706          void Timer0_Routine() interrupt 1
 707          {
 708   1            timer0_count++;
 709   1      //    timer0_count == 100表示过去1s
 710   1            if( 100 == timer0_count)
 711   1            {
 712   2                  second++;
 713   2                  timer0_count = 0;
 714   2            }
 715   1            //复位
 716   1            TH0 = (65535 - 10000)/256;
 717   1            TL0 = (65535 - 10000)%256;
 718   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1657    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   MAIN                                                                  01/03/2023 22:05:37 PAGE 13  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
