C51 COMPILER V9.54   LCD1602                                                               12/19/2022 11:02:47 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: E:\shudian2\5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\LCD1602.lst) TABS(6) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          #include "Delay.h"
   4          
   5          //定义寄存器
   6          #define Lcdout P0
   7          
   8          
   9          //定义引脚
  10          sbit RS = P2^6;
  11          sbit RW = P2^5;
  12          sbit EN = P2^7;
  13          
  14          
  15          
  16          //**************************************************************
  17          //----------------------------  Write_cmd 和 Write_data 差别在RS电平
  18          //发送命令  RS = 0
  19          void Write_cmd(unsigned char cmd)
  20          {
  21   1      
  22   1            RS = 0;
  23   1            RW = 0;
  24   1            EN = 0;
  25   1      
  26   1            //单片机把要发送的数据放到数据总线里
  27   1            Lcdout = cmd;
  28   1            
  29   1            EN = 1;
  30   1            
  31   1            _nop_();
  32   1      
  33   1            EN = 0;
  34   1            
  35   1            Delayms(1);
  36   1      
  37   1            
  38   1      }
  39          //**************************************************************
  40          //发送数据 RS = 1
  41          void Write_data(unsigned char cmd)
  42          {
  43   1      
  44   1            RS = 1;
  45   1            RW = 0;
  46   1            EN = 0;
  47   1      
  48   1            //单片机把要发送的数据放到数据总线里
  49   1            Lcdout = cmd;
  50   1            
  51   1            EN = 1;
  52   1            
  53   1            _nop_();
  54   1      
C51 COMPILER V9.54   LCD1602                                                               12/19/2022 11:02:47 PAGE 2   

  55   1            EN = 0;
  56   1            
  57   1            Delayms(1);
  58   1            
  59   1      
  60   1      }
  61          //**************************************************************
  62          void Lcd_initial()
  63          {
  64   1      
  65   1            Write_cmd(0x01);
  66   1            Write_cmd(0x06);
  67   1            
  68   1            Write_cmd(0x0c);
  69   1            Write_cmd(0x38);
  70   1            
  71   1      
  72   1            
  73   1            Delayms(1);
  74   1            
  75   1            
  76   1      }
  77          //**************************************************************
  78          void Lcd_write_string(char cmd, char* addr)
  79          {
  80   1            while(*addr != '\0')
  81   1            {
  82   2                  Write_cmd(cmd++);
  83   2                  Write_data(*addr);
  84   2                  addr++;
  85   2            }
  86   1      }
  87          
  88          //**************************************************************
  89          
  90          //在第几行第几列显示数字
  91          //形参列表（行，列，数字）
  92          
  93          //**************************************************************
  94          void Lcd_write_number(char line, char row ,unsigned char number)
  95          {
  96   1            if(1 == line)
  97   1            {
  98   2                  Write_cmd(0x80+row-1);
  99   2                  Write_data((number/100)+0x30);
 100   2                  Write_data((number/10%10)+0x30);
 101   2                  Write_data((number%10)+0x30);
 102   2            }
 103   1            else if(2 == line)
 104   1            {
 105   2                  Write_cmd(0xc0+row-1);
 106   2                  Write_data((number/100)+0x30);
 107   2                  Write_data((number/10%10)+0x30);
 108   2                  Write_data((number%10)+0x30);
 109   2            }
 110   1      }
 111          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    182    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.54   LCD1602                                                               12/19/2022 11:02:47 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
